name: Build. Deploy.

on:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build funpay_bot_image .

      - name: Run Docker container
        env:
          GOLDEN_KEY: ${{ secrets.GOLDEN_KEY }}
          USER_AGENT: ${{ secrets.USER_AGENT }}
          ENABLED: ${{ secrets.ENABLED }}
          TOKEN: ${{ secrets.TOKEN }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          echo "${GOLDEN_KEY}" | docker run --name funpay_bot funpay_bot_image |
          expect -c '
            spawn docker attach funpay_bot
            expect "└───> "
            send "${USER_AGENT}\r"
            expect "└───> "
            send "${ENABLED}\r"
            expect "└───> "
            send "${TOKEN}\r"
            expect "└───> "
            send "${SECRET_KEY}\r"
            interact' && python main.py

      - name: Wait for bot to initialize
        run: sleep 10

      - name: Checking logs
        run: docker logs funpay_bot




#  deploy:
#    needs: build-test
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Create target directory
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          key: ${{ secrets.SSH_KEY }}
#          passphrase: ${{ secrets.SSH_PASSPHRASE }}
#          script: mkdir -p /home/ubuntu/telegram_bots/funpay_bot
#
#      - name: Copy code via ssh
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          key: ${{ secrets.SSH_KEY }}
#          passphrase: ${{ secrets.SSH_PASSPHRASE }}
#          source: "."
#          target: "/home/ubuntu/telegram_bots/funpay_bot"
#
#      - name: Executing remote ssh commands to deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          key: ${{ secrets.SSH_KEY }}
#          passphrase: ${{ secrets.SSH_PASSPHRASE }}
#          script: |
#            cd /home/ubuntu/telegram_bots/funpay_bot
#            sudo docker stop funpay_bot
#            sudo docker build --build-arg GOLDEN_KEY=${{ secrets.GOLDEN_KEY }} --build-arg USER_AGENT=${{ secrets.USER_AGENT }} --build-arg ENABLED=${{ secrets.ENABLED }} --build-arg TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} -t funpay_bot_image .
#            sudo docker run -d --restart=unless-stopped --name funpay_bot funpay_bot_image
#            sudo docker image prune -f
